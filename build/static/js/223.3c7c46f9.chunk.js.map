{"version":3,"file":"static/js/223.3c7c46f9.chunk.js","mappings":"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","sources":["components/@extended/Dot.js","pages/dashboard/OrdersTable.js","pages/dashboard/IncomeAreaChart.js","pages/dashboard/MonthlyBarChart.js","pages/dashboard/ReportAreaChart.js","pages/dashboard/SalesColumnChart.js","components/cards/statistics/AnalyticEcommerce.js","pages/dashboard/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nconst Dot = ({ color, size }) => {\r\n    const theme = useTheme();\r\n    let main;\r\n    switch (color) {\r\n        case 'secondary':\r\n            main = theme.palette.secondary.main;\r\n            break;\r\n        case 'error':\r\n            main = theme.palette.error.main;\r\n            break;\r\n        case 'warning':\r\n            main = theme.palette.warning.main;\r\n            break;\r\n        case 'info':\r\n            main = theme.palette.info.main;\r\n            break;\r\n        case 'success':\r\n            main = theme.palette.success.main;\r\n            break;\r\n        case 'primary':\r\n        default:\r\n            main = theme.palette.primary.main;\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: size || 8,\r\n                height: size || 8,\r\n                borderRadius: '50%',\r\n                bgcolor: main\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nDot.propTypes = {\r\n    color: PropTypes.string,\r\n    size: PropTypes.number\r\n};\r\n\r\nexport default Dot;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { Box, Link, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport NumberFormat from 'react-number-format';\r\n\r\n// project import\r\nimport Dot from 'components/@extended/Dot';\r\n\r\nfunction createData(trackingNo, name, fat, carbs, protein) {\r\n    return { trackingNo, name, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData(84564564, 'Camera Lens', 40, 2, 40570),\r\n    createData(98764564, 'Laptop', 300, 0, 180139),\r\n    createData(98756325, 'Mobile', 355, 1, 90989),\r\n    createData(98652366, 'Handset', 50, 1, 10239),\r\n    createData(13286564, 'Computer Accessories', 100, 1, 83348),\r\n    createData(86739658, 'TV', 99, 0, 410780),\r\n    createData(13256498, 'Keyboard', 125, 2, 70999),\r\n    createData(98753263, 'Mouse', 89, 2, 10570),\r\n    createData(98753275, 'Desktop', 185, 1, 98063),\r\n    createData(98753291, 'Chair', 100, 0, 14001)\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// ==============================|| ORDER TABLE - HEADER CELL ||============================== //\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'trackingNo',\r\n        align: 'left',\r\n        disablePadding: false,\r\n        label: 'Tracking No.'\r\n    },\r\n    {\r\n        id: 'name',\r\n        align: 'left',\r\n        disablePadding: true,\r\n        label: 'Product Name'\r\n    },\r\n    {\r\n        id: 'fat',\r\n        align: 'right',\r\n        disablePadding: false,\r\n        label: 'Total Order'\r\n    },\r\n    {\r\n        id: 'carbs',\r\n        align: 'left',\r\n        disablePadding: false,\r\n\r\n        label: 'Status'\r\n    },\r\n    {\r\n        id: 'protein',\r\n        align: 'right',\r\n        disablePadding: false,\r\n        label: 'Total Amount'\r\n    }\r\n];\r\n\r\n// ==============================|| ORDER TABLE - HEADER ||============================== //\r\n\r\nfunction OrderTableHead({ order, orderBy }) {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.align}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        {headCell.label}\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nOrderTableHead.propTypes = {\r\n    order: PropTypes.string,\r\n    orderBy: PropTypes.string\r\n};\r\n\r\n// ==============================|| ORDER TABLE - STATUS ||============================== //\r\n\r\nconst OrderStatus = ({ status }) => {\r\n    let color;\r\n    let title;\r\n\r\n    switch (status) {\r\n        case 0:\r\n            color = 'warning';\r\n            title = 'Pending';\r\n            break;\r\n        case 1:\r\n            color = 'success';\r\n            title = 'Approved';\r\n            break;\r\n        case 2:\r\n            color = 'error';\r\n            title = 'Rejected';\r\n            break;\r\n        default:\r\n            color = 'primary';\r\n            title = 'None';\r\n    }\r\n\r\n    return (\r\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n            <Dot color={color} />\r\n            <Typography>{title}</Typography>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nOrderStatus.propTypes = {\r\n    status: PropTypes.number\r\n};\r\n\r\n// ==============================|| ORDER TABLE ||============================== //\r\n\r\nexport default function OrderTable() {\r\n    const [order] = useState('asc');\r\n    const [orderBy] = useState('trackingNo');\r\n    const [selected] = useState([]);\r\n\r\n    const isSelected = (trackingNo) => selected.indexOf(trackingNo) !== -1;\r\n\r\n    return (\r\n        <Box>\r\n            <TableContainer\r\n                sx={{\r\n                    width: '100%',\r\n                    overflowX: 'auto',\r\n                    position: 'relative',\r\n                    display: 'block',\r\n                    maxWidth: '100%',\r\n                    '& td, & th': { whiteSpace: 'nowrap' }\r\n                }}\r\n            >\r\n                <Table\r\n                    aria-labelledby=\"tableTitle\"\r\n                    sx={{\r\n                        '& .MuiTableCell-root:first-child': {\r\n                            pl: 2\r\n                        },\r\n                        '& .MuiTableCell-root:last-child': {\r\n                            pr: 3\r\n                        }\r\n                    }}\r\n                >\r\n                    <OrderTableHead order={order} orderBy={orderBy} />\r\n                    <TableBody>\r\n                        {stableSort(rows, getComparator(order, orderBy)).map((row, index) => {\r\n                            const isItemSelected = isSelected(row.trackingNo);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    role=\"checkbox\"\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row.trackingNo}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    <TableCell component=\"th\" id={labelId} scope=\"row\" align=\"left\">\r\n                                        <Link color=\"secondary\" component={RouterLink} to=\"\">\r\n                                            {row.trackingNo}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{row.name}</TableCell>\r\n                                    <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <OrderStatus status={row.carbs} />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <NumberFormat value={row.protein} displayType=\"text\" thousandSeparator prefix=\"$\" />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n    chart: {\r\n        height: 450,\r\n        type: 'area',\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'smooth',\r\n        width: 2\r\n    },\r\n    grid: {\r\n        strokeDashArray: 0\r\n    }\r\n};\r\n\r\n// ==============================|| INCOME AREA CHART ||============================== //\r\n\r\nconst IncomeAreaChart = ({ slot }) => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n\r\n    const [options, setOptions] = useState(areaChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [theme.palette.primary.main, theme.palette.primary[700]],\r\n            xaxis: {\r\n                categories:\r\n                    slot === 'month'\r\n                        ? ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n                        : ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                labels: {\r\n                    style: {\r\n                        colors: [\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary\r\n                        ]\r\n                    }\r\n                },\r\n                axisBorder: {\r\n                    show: true,\r\n                    color: line\r\n                },\r\n                tickAmount: slot === 'month' ? 11 : 7\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            }\r\n        }));\r\n    }, [primary, secondary, line, theme, slot]);\r\n\r\n    const [series, setSeries] = useState([\r\n        {\r\n            name: 'Page Views',\r\n            data: [0, 86, 28, 115, 48, 210, 136]\r\n        },\r\n        {\r\n            name: 'Sessions',\r\n            data: [0, 43, 14, 56, 24, 105, 68]\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setSeries([\r\n            {\r\n                name: 'Page Views',\r\n                data: slot === 'month' ? [76, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35] : [31, 40, 28, 51, 42, 109, 100]\r\n            },\r\n            {\r\n                name: 'Sessions',\r\n                data: slot === 'month' ? [110, 60, 150, 35, 60, 36, 26, 45, 65, 52, 53, 41] : [11, 32, 45, 32, 34, 52, 41]\r\n            }\r\n        ]);\r\n    }, [slot]);\r\n\r\n    return <ReactApexChart options={options} series={series} type=\"area\" height={450} />;\r\n};\r\n\r\nIncomeAreaChart.propTypes = {\r\n    slot: PropTypes.string\r\n};\r\n\r\nexport default IncomeAreaChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst barChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 365,\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            columnWidth: '45%',\r\n            borderRadius: 4\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    xaxis: {\r\n        categories: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],\r\n        axisBorder: {\r\n            show: false\r\n        },\r\n        axisTicks: {\r\n            show: false\r\n        }\r\n    },\r\n    yaxis: {\r\n        show: false\r\n    },\r\n    grid: {\r\n        show: false\r\n    }\r\n};\r\n\r\n// ==============================|| MONTHLY BAR CHART ||============================== //\r\n\r\nconst MonthlyBarChart = () => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const info = theme.palette.info.light;\r\n\r\n    const [series] = useState([\r\n        {\r\n            data: [80, 95, 70, 42, 65, 55, 78]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState(barChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [info],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary, secondary, secondary, secondary, secondary, secondary, secondary]\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [primary, info, secondary]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={365} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MonthlyBarChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n    chart: {\r\n        height: 340,\r\n        type: 'line',\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'smooth',\r\n        width: 1.5\r\n    },\r\n    grid: {\r\n        strokeDashArray: 4\r\n    },\r\n    xaxis: {\r\n        type: 'datetime',\r\n        categories: [\r\n            '2018-05-19T00:00:00.000Z',\r\n            '2018-06-19T00:00:00.000Z',\r\n            '2018-07-19T01:30:00.000Z',\r\n            '2018-08-19T02:30:00.000Z',\r\n            '2018-09-19T03:30:00.000Z',\r\n            '2018-10-19T04:30:00.000Z',\r\n            '2018-11-19T05:30:00.000Z',\r\n            '2018-12-19T06:30:00.000Z'\r\n        ],\r\n        labels: {\r\n            format: 'MMM'\r\n        },\r\n        axisBorder: {\r\n            show: false\r\n        },\r\n        axisTicks: {\r\n            show: false\r\n        }\r\n    },\r\n    yaxis: {\r\n        show: false\r\n    },\r\n    tooltip: {\r\n        x: {\r\n            format: 'MM'\r\n        }\r\n    }\r\n};\r\n\r\n// ==============================|| REPORT AREA CHART ||============================== //\r\n\r\nconst ReportAreaChart = () => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n\r\n    const [options, setOptions] = useState(areaChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [theme.palette.warning.main],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n    }, [primary, secondary, line, theme]);\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Series 1',\r\n            data: [58, 115, 28, 83, 63, 75, 35, 55]\r\n        }\r\n    ]);\r\n\r\n    return <ReactApexChart options={options} series={series} type=\"line\" height={345} />;\r\n};\r\n\r\nexport default ReportAreaChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst columnChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 430,\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            columnWidth: '30%',\r\n            borderRadius: 4\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        show: true,\r\n        width: 8,\r\n        colors: ['transparent']\r\n    },\r\n    xaxis: {\r\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']\r\n    },\r\n    yaxis: {\r\n        title: {\r\n            text: '$ (thousands)'\r\n        }\r\n    },\r\n    fill: {\r\n        opacity: 1\r\n    },\r\n    tooltip: {\r\n        y: {\r\n            formatter(val) {\r\n                return `$ ${val} thousands`;\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        show: true,\r\n        fontFamily: `'Public Sans', sans-serif`,\r\n        offsetX: 10,\r\n        offsetY: 10,\r\n        labels: {\r\n            useSeriesColors: false\r\n        },\r\n        markers: {\r\n            width: 16,\r\n            height: 16,\r\n            radius: '50%',\r\n            offsexX: 2,\r\n            offsexY: 2\r\n        },\r\n        itemMargin: {\r\n            horizontal: 15,\r\n            vertical: 50\r\n        }\r\n    },\r\n    responsive: [\r\n        {\r\n            breakpoint: 600,\r\n            options: {\r\n                yaxis: {\r\n                    show: false\r\n                }\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\n// ==============================|| SALES COLUMN CHART ||============================== //\r\n\r\nconst SalesColumnChart = () => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n\r\n    const warning = theme.palette.warning.main;\r\n    const primaryMain = theme.palette.primary.main;\r\n    const successDark = theme.palette.success.dark;\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Net Profit',\r\n            data: [180, 90, 135, 114, 120, 145]\r\n        },\r\n        {\r\n            name: 'Revenue',\r\n            data: [120, 45, 78, 150, 168, 99]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState(columnChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [warning, primaryMain],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary, secondary, secondary, secondary, secondary, secondary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            },\r\n            legend: {\r\n                position: 'top',\r\n                horizontalAlign: 'right',\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n    }, [primary, secondary, line, warning, primaryMain, successDark]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={430} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SalesColumnChart;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box, Chip, Grid, Stack, Typography } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'components/MainCard';\r\n\r\n// assets\r\nimport { RiseOutlined, FallOutlined } from '@ant-design/icons';\r\n\r\n// ==============================|| STATISTICS - ECOMMERCE CARD  ||============================== //\r\n\r\nconst AnalyticEcommerce = ({ color, title, count, percentage, isLoss, extra }) => (\r\n    <MainCard contentSX={{ p: 2.25 }}>\r\n        <Stack spacing={0.5}>\r\n            <Typography variant=\"h6\" color=\"textSecondary\">\r\n                {title}\r\n            </Typography>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" color=\"inherit\">\r\n                        {count}\r\n                    </Typography>\r\n                </Grid>\r\n                {percentage && (\r\n                    <Grid item>\r\n                        <Chip\r\n                            variant=\"combined\"\r\n                            color={color}\r\n                            icon={\r\n                                <>\r\n                                    {!isLoss && <RiseOutlined style={{ fontSize: '0.75rem', color: 'inherit' }} />}\r\n                                    {isLoss && <FallOutlined style={{ fontSize: '0.75rem', color: 'inherit' }} />}\r\n                                </>\r\n                            }\r\n                            label={`${percentage}%`}\r\n                            sx={{ ml: 1.25, pl: 1 }}\r\n                            size=\"small\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Stack>\r\n        <Box sx={{ pt: 2.25 }}>\r\n            <Typography variant=\"caption\" color=\"textSecondary\">\r\n                You made an extra{' '}\r\n                <Typography component=\"span\" variant=\"caption\" sx={{ color: `${color || 'primary'}.main` }}>\r\n                    {extra}\r\n                </Typography>{' '}\r\n                this year\r\n            </Typography>\r\n        </Box>\r\n    </MainCard>\r\n);\r\n\r\nAnalyticEcommerce.propTypes = {\r\n    color: PropTypes.string,\r\n    title: PropTypes.string,\r\n    count: PropTypes.string,\r\n    percentage: PropTypes.number,\r\n    isLoss: PropTypes.bool,\r\n    extra: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\r\n};\r\n\r\nAnalyticEcommerce.defaultProps = {\r\n    color: 'primary'\r\n};\r\n\r\nexport default AnalyticEcommerce;\r\n","import { useState } from 'react';\r\n\r\n// material-ui\r\nimport {\r\n    Avatar,\r\n    AvatarGroup,\r\n    Box,\r\n    Button,\r\n    Grid,\r\n    List,\r\n    ListItemAvatar,\r\n    ListItemButton,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    MenuItem,\r\n    Stack,\r\n    TextField,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// project import\r\nimport OrdersTable from './OrdersTable';\r\nimport IncomeAreaChart from './IncomeAreaChart';\r\nimport MonthlyBarChart from './MonthlyBarChart';\r\nimport ReportAreaChart from './ReportAreaChart';\r\nimport SalesColumnChart from './SalesColumnChart';\r\nimport MainCard from 'components/MainCard';\r\nimport AnalyticEcommerce from 'components/cards/statistics/AnalyticEcommerce';\r\n\r\n// assets\r\nimport { GiftOutlined, MessageOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport avatar1 from 'assets/images/users/avatar-1.png';\r\nimport avatar2 from 'assets/images/users/avatar-2.png';\r\nimport avatar3 from 'assets/images/users/avatar-3.png';\r\nimport avatar4 from 'assets/images/users/avatar-4.png';\r\n\r\n// avatar style\r\nconst avatarSX = {\r\n    width: 36,\r\n    height: 36,\r\n    fontSize: '1rem'\r\n};\r\n\r\n// action style\r\nconst actionSX = {\r\n    mt: 0.75,\r\n    ml: 1,\r\n    top: 'auto',\r\n    right: 'auto',\r\n    alignSelf: 'flex-start',\r\n    transform: 'none'\r\n};\r\n\r\n// sales report status\r\nconst status = [\r\n    {\r\n        value: 'today',\r\n        label: 'Today'\r\n    },\r\n    {\r\n        value: 'month',\r\n        label: 'This Month'\r\n    },\r\n    {\r\n        value: 'year',\r\n        label: 'This Year'\r\n    }\r\n];\r\n\r\n// ==============================|| DASHBOARD - DEFAULT ||============================== //\r\n\r\nconst DashboardDefault = () => {\r\n    const [value, setValue] = useState('today');\r\n    const [slot, setSlot] = useState('week');\r\n\r\n    return (\r\n        <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n            {/* row 1 */}\r\n            <Grid item xs={12} sx={{ mb: -2.25 }}>\r\n                <Typography variant=\"h5\">Dashboard</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <AnalyticEcommerce title=\"Total Page Views\" count=\"4,42,236\" percentage={59.3} extra=\"35,000\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <AnalyticEcommerce title=\"Total Users\" count=\"78,250\" percentage={70.5} extra=\"8,900\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <AnalyticEcommerce title=\"Total Order\" count=\"18,800\" percentage={27.4} isLoss color=\"warning\" extra=\"1,943\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <AnalyticEcommerce title=\"Total Sales\" count=\"$35,078\" percentage={27.4} isLoss color=\"warning\" extra=\"$20,395\" />\r\n            </Grid>\r\n\r\n            <Grid item md={8} sx={{ display: { sm: 'none', md: 'block', lg: 'none' } }} />\r\n\r\n            {/* row 2 */}\r\n            <Grid item xs={12} md={7} lg={8}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Unique Visitor</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={0}>\r\n                            <Button\r\n                                size=\"small\"\r\n                                onClick={() => setSlot('month')}\r\n                                color={slot === 'month' ? 'primary' : 'secondary'}\r\n                                variant={slot === 'month' ? 'outlined' : 'text'}\r\n                            >\r\n                                Month\r\n                            </Button>\r\n                            <Button\r\n                                size=\"small\"\r\n                                onClick={() => setSlot('week')}\r\n                                color={slot === 'week' ? 'primary' : 'secondary'}\r\n                                variant={slot === 'week' ? 'outlined' : 'text'}\r\n                            >\r\n                                Week\r\n                            </Button>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n                <MainCard content={false} sx={{ mt: 1.5 }}>\r\n                    <Box sx={{ pt: 1, pr: 2 }}>\r\n                        <IncomeAreaChart slot={slot} />\r\n                    </Box>\r\n                </MainCard>\r\n            </Grid>\r\n            <Grid item xs={12} md={5} lg={4}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Income Overview</Typography>\r\n                    </Grid>\r\n                    <Grid item />\r\n                </Grid>\r\n                <MainCard sx={{ mt: 2 }} content={false}>\r\n                    <Box sx={{ p: 3, pb: 0 }}>\r\n                        <Stack spacing={2}>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                This Week Statistics\r\n                            </Typography>\r\n                            <Typography variant=\"h3\">$7,650</Typography>\r\n                        </Stack>\r\n                    </Box>\r\n                    <MonthlyBarChart />\r\n                </MainCard>\r\n            </Grid>\r\n\r\n            {/* row 3 */}\r\n            <Grid item xs={12} md={7} lg={8}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Recent Orders</Typography>\r\n                    </Grid>\r\n                    <Grid item />\r\n                </Grid>\r\n                <MainCard sx={{ mt: 2 }} content={false}>\r\n                    <OrdersTable />\r\n                </MainCard>\r\n            </Grid>\r\n            <Grid item xs={12} md={5} lg={4}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Analytics Report</Typography>\r\n                    </Grid>\r\n                    <Grid item />\r\n                </Grid>\r\n                <MainCard sx={{ mt: 2 }} content={false}>\r\n                    <List sx={{ p: 0, '& .MuiListItemButton-root': { py: 2 } }}>\r\n                        <ListItemButton divider>\r\n                            <ListItemText primary=\"Company Finance Growth\" />\r\n                            <Typography variant=\"h5\">+45.14%</Typography>\r\n                        </ListItemButton>\r\n                        <ListItemButton divider>\r\n                            <ListItemText primary=\"Company Expenses Ratio\" />\r\n                            <Typography variant=\"h5\">0.58%</Typography>\r\n                        </ListItemButton>\r\n                        <ListItemButton>\r\n                            <ListItemText primary=\"Business Risk Cases\" />\r\n                            <Typography variant=\"h5\">Low</Typography>\r\n                        </ListItemButton>\r\n                    </List>\r\n                    <ReportAreaChart />\r\n                </MainCard>\r\n            </Grid>\r\n\r\n            {/* row 4 */}\r\n            <Grid item xs={12} md={7} lg={8}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Sales Report</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            id=\"standard-select-currency\"\r\n                            size=\"small\"\r\n                            select\r\n                            value={value}\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            sx={{ '& .MuiInputBase-input': { py: 0.5, fontSize: '0.875rem' } }}\r\n                        >\r\n                            {status.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </Grid>\r\n                </Grid>\r\n                <MainCard sx={{ mt: 1.75 }}>\r\n                    <Stack spacing={1.5} sx={{ mb: -12 }}>\r\n                        <Typography variant=\"h6\" color=\"secondary\">\r\n                            Net Profit\r\n                        </Typography>\r\n                        <Typography variant=\"h4\">$1560</Typography>\r\n                    </Stack>\r\n                    <SalesColumnChart />\r\n                </MainCard>\r\n            </Grid>\r\n            <Grid item xs={12} md={5} lg={4}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Transaction History</Typography>\r\n                    </Grid>\r\n                    <Grid item />\r\n                </Grid>\r\n                <MainCard sx={{ mt: 2 }} content={false}>\r\n                    <List\r\n                        component=\"nav\"\r\n                        sx={{\r\n                            px: 0,\r\n                            py: 0,\r\n                            '& .MuiListItemButton-root': {\r\n                                py: 1.5,\r\n                                '& .MuiAvatar-root': avatarSX,\r\n                                '& .MuiListItemSecondaryAction-root': { ...actionSX, position: 'relative' }\r\n                            }\r\n                        }}\r\n                    >\r\n                        <ListItemButton divider>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    sx={{\r\n                                        color: 'success.main',\r\n                                        bgcolor: 'success.lighter'\r\n                                    }}\r\n                                >\r\n                                    <GiftOutlined />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={<Typography variant=\"subtitle1\">Order #002434</Typography>} secondary=\"Today, 2:00 AM\" />\r\n                            <ListItemSecondaryAction>\r\n                                <Stack alignItems=\"flex-end\">\r\n                                    <Typography variant=\"subtitle1\" noWrap>\r\n                                        + $1,430\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" color=\"secondary\" noWrap>\r\n                                        78%\r\n                                    </Typography>\r\n                                </Stack>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItemButton>\r\n                        <ListItemButton divider>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    sx={{\r\n                                        color: 'primary.main',\r\n                                        bgcolor: 'primary.lighter'\r\n                                    }}\r\n                                >\r\n                                    <MessageOutlined />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={<Typography variant=\"subtitle1\">Order #984947</Typography>}\r\n                                secondary=\"5 August, 1:45 PM\"\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <Stack alignItems=\"flex-end\">\r\n                                    <Typography variant=\"subtitle1\" noWrap>\r\n                                        + $302\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" color=\"secondary\" noWrap>\r\n                                        8%\r\n                                    </Typography>\r\n                                </Stack>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItemButton>\r\n                        <ListItemButton>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    sx={{\r\n                                        color: 'error.main',\r\n                                        bgcolor: 'error.lighter'\r\n                                    }}\r\n                                >\r\n                                    <SettingOutlined />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={<Typography variant=\"subtitle1\">Order #988784</Typography>} secondary=\"7 hours ago\" />\r\n                            <ListItemSecondaryAction>\r\n                                <Stack alignItems=\"flex-end\">\r\n                                    <Typography variant=\"subtitle1\" noWrap>\r\n                                        + $682\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" color=\"secondary\" noWrap>\r\n                                        16%\r\n                                    </Typography>\r\n                                </Stack>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItemButton>\r\n                    </List>\r\n                </MainCard>\r\n                <MainCard sx={{ mt: 2 }}>\r\n                    <Stack spacing={3}>\r\n                        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Stack>\r\n                                    <Typography variant=\"h5\" noWrap>\r\n                                        Help & Support Chat\r\n                                    </Typography>\r\n                                    <Typography variant=\"caption\" color=\"secondary\" noWrap>\r\n                                        Typical replay within 5 min\r\n                                    </Typography>\r\n                                </Stack>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <AvatarGroup sx={{ '& .MuiAvatar-root': { width: 32, height: 32 } }}>\r\n                                    <Avatar alt=\"Remy Sharp\" src={avatar1} />\r\n                                    <Avatar alt=\"Travis Howard\" src={avatar2} />\r\n                                    <Avatar alt=\"Cindy Baker\" src={avatar3} />\r\n                                    <Avatar alt=\"Agnes Walker\" src={avatar4} />\r\n                                </AvatarGroup>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button size=\"small\" variant=\"contained\" sx={{ textTransform: 'capitalize' }}>\r\n                            Need Help?\r\n                        </Button>\r\n                    </Stack>\r\n                </MainCard>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default DashboardDefault;\r\n"],"names":["main","color","size","theme","useTheme","palette","secondary","error","warning","info","success","primary","sx","width","height","borderRadius","bgcolor","createData","trackingNo","name","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","align","disablePadding","label","OrderTableHead","TableHead","TableRow","headCell","TableCell","padding","sortDirection","OrderStatus","title","status","Stack","direction","spacing","alignItems","Dot","Typography","OrderTable","useState","selected","Box","TableContainer","overflowX","position","display","maxWidth","whiteSpace","Table","pl","pr","TableBody","row","isItemSelected","indexOf","labelId","hover","role","border","tabIndex","component","scope","Link","RouterLink","to","value","displayType","thousandSeparator","prefix","areaChartOptions","chart","type","toolbar","show","dataLabels","enabled","stroke","curve","grid","strokeDashArray","slot","text","line","divider","options","setOptions","useEffect","prevState","colors","xaxis","categories","labels","style","axisBorder","tickAmount","yaxis","borderColor","tooltip","data","series","setSeries","barChartOptions","plotOptions","bar","columnWidth","axisTicks","light","format","x","legend","columnChartOptions","fill","opacity","y","formatter","val","fontFamily","offsetX","offsetY","useSeriesColors","markers","radius","offsexX","offsexY","itemMargin","horizontal","vertical","responsive","breakpoint","primaryMain","successDark","dark","horizontalAlign","AnalyticEcommerce","count","percentage","isLoss","extra","MainCard","contentSX","p","variant","Grid","container","item","Chip","icon","RiseOutlined","fontSize","FallOutlined","ml","pt","defaultProps","avatarSX","actionSX","mt","top","right","alignSelf","transform","setValue","setSlot","rowSpacing","columnSpacing","xs","mb","sm","md","lg","justifyContent","Button","onClick","content","pb","List","py","ListItemButton","ListItemText","TextField","select","onChange","e","target","option","MenuItem","px","ListItemAvatar","Avatar","GiftOutlined","ListItemSecondaryAction","noWrap","MessageOutlined","SettingOutlined","AvatarGroup","alt","src","avatar1","textTransform"],"sourceRoot":""}